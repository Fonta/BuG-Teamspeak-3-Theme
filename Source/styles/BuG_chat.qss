/*
 * TeamSpeak 3 Default Qt StyleSheet
 * Special file for ChatLog, loaded in addition to global default.qss stylesheet
 *
 * Copyright (c) TeamSpeak Systems GmbH
 *
 * Supported HTML Subset:
 * 
 *  TeamSpeak 3's text chat is able to display rich text, specified using a very limited subset of HTML 4 markup.
 *  Please refer to this page for more information:
 *
 *  http://qt-project.org/doc/qt-4.8/richtext-html-subset.html#css-properties
 *
 * ===
 * === Chat Message Syntax Example:
 * ===
 *
 *  <p class="{PRIMARY_CLASS}">
 *    <span class="Body">
 *      <img src="...">
 *      <span class="{SECONDARY_CLASS}">...</span>
 *      <a class="{SECONDARY_CLASS}" href="...">...</a>:
 *      <spanclass="{SECONDARY_CLASS}">
 *        ...
 *      </span>
 *  </p>
 *
 * ===
 * === Primary Classes:
 * ===
 *  
 *  - TextMessage_Normal                   :: informational message
 *  - TextMessage_Welcome                  :: server welcome message
 *  - TextMessage_HostMsg                  :: server host message
 *  - TextMessage_Message                  :: text messages (details below)
 *  - TextMessage_Poke                     :: poke messages
 *  - TextMessage_Connected                :: own client connected to server
 *  - TextMessage_Disconnected             :: own client disconnected from server
 *  - TextMessage_ClientConnected          :: other client connected to server
 *  - TextMessage_ClientDisconnected       :: other client connected from server
 *  - TextMessage_ClientJoined             :: other client joined channel
 *  - TextMessage_ClientLeft               :: other client left channel
 *  - TextMessage_ClientSwitched           :: own/other client switched channel
 *  - TextMessage_ClientDropped            :: own/other client timed out
 *  - TextMessage_ClientKicked             :: own/other client kicked
 *  - TextMessage_ClientBanned             :: own/other client banned
 *  - TextMessage_ChannelCreated           :: channel created
 *  - TextMessage_ChannelDeleted           :: channel deleted
 *  - TextMessage_ChannelMoved             :: channel parent changed
 *  - TextMessage_ChannelEdited            :: channel edited
 *  - TextMessage_ServerEdited             :: server edited
 *  - TextMessage_ServerError              :: server error
 *  - TextMessage_GroupAssigned            :: channel/server group assigned
 *  - TextMessage_GroupRevoked             :: channel/server group revoked
 *  - TextMessage_TalkPowerAssigned        :: talk power granted
 *  - TextMessage_TalkPowerRevoked         :: talk power revoked
 *  - TextMessage_TalkPowerRequested       :: talk power requested
 *  - TextMessage_BeginHistory             :: talk power revoked
 *  - TextMessage_EndHistory               :: talk power revoked
 *
 *  The TextMessage_Message class can be used in combination with additional classes to identify specific messages.
 *  Currently, we provide the following:
 *
 *  - Incoming                             :: incoming text messages
 *  - Outgoing                             :: outgoing text messages
 *  - Friend                               :: text messages sent by friends
 *  - Blocked                              :: text messages sent by blocked users
 *  - Private                              :: text messages in a private chat tab
 *  - Public                               :: text messages in a channel/server chat tab
 *
 *  The CSS definition for a private text message sent by a friend would look like this:
 *
 *  .TextMessage_Message.Friend.Private { ... }
 *
 * ===
 * === Secondary Classes (used within messages):
 * ===
 *  
 *  - TextMessage_UserLink                 :: user nickname 
 *  - TextMessage_ChannelLink              :: channel name
 *  - TextMessage_ServerLink               :: server name
 *  - TextMessage_OfflineLink              :: offline unread message(s) count
 *  - TextMessage_Time                     :: message time
 *  - TextMessage_Text                     :: message text
 */
 
/* @group Global Elements */

	p {
		padding: 0px;
		margin: 0px;
	}

/* @end */

/* @group Infoframe Elements */

	.Infoframe_text-left {
		text-align: left;
	}

	.Infoframe_text-right {
		text-align: right;
	}

	.Infoframe_text-center {
		text-align: center;
	}

	.Infoframe_alert {
		color: #ff0000;
		font-weight: bold;
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_table {
		margin: 0px 10px;
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_table_wrapper {
		margin: 0px 5px;
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_header {
		font-family: 'Bebas Neue', 'Segoe UI';
		font-size: 40px;
		white-space: nowrap;
	}

	.Infoframe_headera {
		font-family: 'Bebas Neue', 'Segoe UI';
		font-size: 40px;
		white-space: nowrap;
		color: #000000;
		text-decoration: none;
	}

	.Infoframe_subheader {
		font-family: 'Bebas Neue', 'Segoe UI';
		font-size: 26px;
		white-space: nowrap;
		margin: 0px;
	}

	.Infoframe_channel-topic {
		font-family: 'Segoe UI';
		font-size: 18px;
	}

	.Infoframe_description-title {
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_description-text {
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_active {
		color: green;
		text-decoration: underline;
	}

	.Infoframe_inactive {
		color: gray;
		text-decoration: underline;
	}

	.Infoframe_red {
		color: red;
	}

	.Infoframe_orange {
		color: #ec6600;
	}

	.Infoframe_blue {
		color: blue;
	}

	.Infoframe_info {
		border-collapse: collapse;
		border-spacing: 0px;
		font-family: 'Segoe UI';
		font-size: 15px;
	}

	.Infoframe_list {
		border-collapse: collapse;
		border-spacing: 0px;
		margin-bottom: 10px;
		font-family: 'Segoe UI';
		font-size: 15px;
		/* padding: 0px 1px 0px 0px; */
		vertical-align: top;
	}

	.Infoframe_label {
		font-weight: bold;
		white-space: nowrap;
	}

	.Infoframe_space {
		padding-top: 6px;
	}

	.Infoframe_nospace {
		margin: 0px;
		padding: 0px;
	}

	.Infoframe_hidden {
		color: #ffffff;
		font-size: 1px;
	}

	.Infoframe_servergroups {
		padding: 2px 3px;
	}

/* @end */